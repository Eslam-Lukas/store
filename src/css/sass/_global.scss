@use './helpers/vars' as *;
@use './helpers/mixin' as *;
@use './helpers/funcation' as *;
* {
	transition: 0.4s !important;
}
html {
	scrollbar-color: $color-overlay-light $color-pesudo-ele;
	scrollbar-width: thin;
}

.body {
	min-height: 100vh;
}
::-webkit-scrollbar {
	background-color: $color-pesudo-ele;
	width: 5px;
	opacity: 0.5;
	&:hover {
		opacity: 1;
	}
}
::-webkit-scrollbar-corner {
	background-color: $color-pesudo-ele;
}
::-webkit-scrollbar-track {
	box-shadow: 2px 2px 0 1px $color-text-close inset;
}
::-webkit-scrollbar-thumb {
	background-color: $true-overlay-desc;
	border-radius: 5px;
	opacity: 0.5;
	&:hover {
		opacity: 1;
	}
}
::-moz-scrollbar {
	background-color: $color-pesudo-ele;
	width: 5px;
	opacity: 0.5;
	&:hover {
		opacity: 1;
	}
}
::-moz-scrollbar-corner {
	background-color: $color-pesudo-ele;
}
::-moz-scrollbar-track {
	box-shadow: 2px 2px 2px 0 $color-text-close inset,
		-2px -2px 2px 0 $color-text-close inset;
}
::-moz-scrollbar-thumb {
	background-color: $true-overlay-desc;
	border-radius: 5px;
	opacity: 0.5;
	&:hover {
		opacity: 1;
	}
}
#root {
	background-color: $background-main;
	min-height: 100vh;
	text-transform: capitalize;
	box-shadow: -5px 0px 12px 2px $true-overlay-desc inset,
		5px 0px 12px 2px $true-overlay-desc inset;
}
$breaks: 'st', 'sm', 'md', 'lg', 'xl', 'xxl';
$widths: 100, 80, 75, 50, 30, 25, 20, 10;
@each $break in $breaks {
	@each $width in $widths {
		@include media($break) {
			.w-#{$break}-#{$width} {
				width: #{$width + '%'} !important;
			}
		}
	}
}
$pesudo-ele: after, before;
$direction: 'top', 'left', 'bottom', 'right';
$heights: 'px', '%';
@for $i from 1 through 100 {
	@each $ele in $pesudo-ele {
		@each $dir in $direction {
			@each $width in $widths {
				@each $height in $heights {
					@if $height== '%' {
						%pesudo-#{$ele}-#{$dir}-#{$width}-#{$i}-pre {
							&::#{$ele} {
								content: '';
								position: absolute;
								width: #{$width + '%'};
								#{$dir}: 0 !important;
								border-#{$dir}: #{$i + 'px'} solid;
							}
						} //class %
					} @else {
						%pesudo-#{$ele}-#{$dir}-#{$width}-#{$i}-#{$height} {
							&::#{$ele} {
								content: '';
								position: absolute;
								width: #{$width + '%'};
								#{$dir}: 0 !important;
								border-#{$dir}: #{$i + 'px'} solid;
							}
						} //class px
					} //else
				}
			}
		}
	}
}
.bg-variant {
	background-color: $variant !important;
}
%pesudo-animation-rotate {
	z-index: 0;
	border-radius: 10px;
	overflow: hidden;
	padding: 2rem;
	position: relative;
	&::before {
		content: '';
		position: absolute;
		z-index: -2;
		left: -50%;
		top: -50%;
		width: 200%;
		height: 200%;
		background-color: #399953;
		background-repeat: no-repeat;
		background-size: 50% 50%, 50% 50%;
		background-position: 0 0, 100% 0, 100% 100%, 0 100%;
		background-image: linear-gradient(#399953, #399953),
			linear-gradient(#fbb300, #fbb300), linear-gradient(#d53e33, #d53e33),
			linear-gradient(#377af5, #377af5);
		animation: rotate 4s linear infinite;
	}

	&::after {
		content: '';
		position: absolute;
		z-index: -1;
		left: 6px;
		top: 6px;
		width: calc(100% - 12px);
		height: calc(100% - 12px);
		background: $background-main;
		border-radius: 5px;
		animation: opacityChange 3s infinite alternate;
	}
}
.center-left {
	position: absolute;
	top: 50%;
	left: 50%;
	transform: translate(-50%, -50%);
}
.bg-inherit {
	background-color: inherit !important;
	color: inherit !important;
}
.circle-50 {
	display: inline-block;

	width: 50px !important;
	height: 50px !important;
	border-radius: 50% !important ;
}
.legend-reset {
	float: revert;
	width: revert;
	padding: revert;
	margin-bottom: revert;
}
.fildset-reset {
	min-width: revert;
	padding: revert;
	margin: revert;
	border: revert;
}
